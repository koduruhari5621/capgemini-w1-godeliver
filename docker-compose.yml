version: '2.1'

services:

  eureka-server:
  

    depends_on:

      config-service:

        condition: service_healthy

    restart: always

    network_mode: "host"

    image: shiri277/eurekaserver:1.0

    hostname: localhost

    ports:

      - 8761:8761

    healthcheck:

      test: "exit 0"



  config-service:

   image: shiri277/config-server:1.0
   
   restart: always

   network_mode: "host"

   hostname: localhost

   ports:

    - 8891:8891

   healthcheck:

    test: "exit 0"



  api-gateway:

   image: shiri277/api-gateway:1.0

   depends_on:

    config-service:

     condition: service_healthy

    eureka-server:

     condition: service_healthy

   restart: always

   network_mode: "host"

   image: demo-zuul-service

   hostname: localhost

   ports:

    - 8080:8080

   healthcheck:

    test: "exit 0"

  

#  user-login:
#
#   build: user-login/
#
#   container_name: user-login-docker
#
#   depends_on:
#
#    - mysql
#
#   healthcheck:
#
#    test: exit 0
#
#   hostname: localhost
#
#   image: login
#
#   network_mode: host
#
#   ports:
#
#    - 8082:8082
#
#   restart: always
#
#
#
#  mysql:
#
#   container_name: mysql-docker
#
#   image: mysql:5.5
#
#   ports:
#
#    - 3306:3306
#
#   network_mode: host
#
#   hostname: localhost
#
#   environment:
#
#    MYSQL_ROOT_PASSWORD: root
#
#    MYSQL_DATABASE: go_d
#
#    MYSQL_PASSWORD: 
#
#   healthcheck:
#
#    test: exit 0
#
#
  user-profile:
  
   build: user-profile/
   
   image: user-profile

   restart: always

   network_mode: host

   container_name: userprofile

   depends_on:

    - mongo

   ports:

    - 8070:8070

   healthcheck:

    test: "exit 0"



  mongo:

   image: mongo

   network_mode: host

   container_name: spring-mongo

   ports:

    - 27017:27017

   volumes:

    - /usr/src/home:/data/db



  zookeeper:
   image: wurstmeister/zookeeper
   ports:
    - "2181:2181"
   restart: always
   network_mode: host 
   hostname: localhost
   healthcheck:

    test: "exit 0"
   
  
  kafka:
   image: wurstmeister/kafka
   hostname: kafka
   container_name: kafka
   depends_on:
    - zookeeper
   ports:
    - '9092:9092'
   environment:
    KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
    KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
    KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
   restart: always
   network_mode: host 
   hostname: localhost
   healthcheck:

    test: "exit 0"

